@startuml

class Document {
    - MongoDB mongo
    + void update(file)
    + void normalize(pd.DataFrame)
    + void update_collection(pd.DataFrame)
    + void create_or_update_collection(pd.DataFrame)
}

interface MLModel {
    + fit(array X_train, array y_train)
}

class LinearRegression {
    + fit(array X_train, array y_train)
}

class Model {
    - MongoDB mongo
    - MLModel linear_regression()
    + text/plain put(HTTPrequest)
    + MLModel get_model(HTTPrequest)
    + train(MLmodel, request)
}

class Creditos {
    - MongoDB mongo
    + json list_all()
    + void normalize(pd.DataFrame)
    + void update_collection(pd.DataFrame)
}

class Cuotas {
    - MongoDB mongo
    + json list_all()
    + void normalize(pd.DataFrame)
    + void update_collection(pd.DataFrame)
}

class Clientes {
    - MongoDB mongo
    + json list_all()
    + void normalize(pd.DataFrame)
    + void update_collection(pd.DataFrame)
}

class Pagos {
    - MongoDB mongo
    + json list_all()
    + void normalize(pd.DataFrame)
    + void update_collection(pd.DataFrame)
}

class Predictor {
    - float confiabilidad_log(float y_pred)
    + json post(request)
}

Creditos -up-|> Document
Cuotas -up-|> Document
Clientes -up-|> Document
Pagos -up-|> Document
Model -down-> LinearRegression
LinearRegression -up-|> MLModel

Model .up.> Creditos
Model .up.> Cuotas
Model .up.> Clientes
Model .up.> Pagos

Predictor .up.> Model

@enduml

